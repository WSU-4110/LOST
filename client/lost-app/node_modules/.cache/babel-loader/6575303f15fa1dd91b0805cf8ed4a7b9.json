{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kcgal\\\\OneDrive\\\\Documents\\\\GitHub\\\\LOST\\\\client\\\\lost-app\\\\src\\\\components\\\\DropdownButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { Manager, Reference, Popper } from \"react-popper\";\nimport SubMenu from \"./SubMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownButton = _ref => {\n  _s();\n\n  let {\n    buttonText,\n    options\n  } = _ref;\n  const [dropdownOpen, setDropdownToggle] = useState(false);\n  const [subMenus, setSubMenus] = useState({});\n  const dropdownListRef = useRef(null);\n  const dropdownButtonRef = useRef(null);\n  useEffect(() => {\n    options.forEach(opt => {\n      if (opt.subMenu) {\n        const tempSubMenus = subMenus;\n        tempSubMenus[opt.name] = false;\n        setSubMenus(tempSubMenus);\n      }\n    });\n  }, [options]);\n\n  const showSub = name => {\n    console.log(subMenus);\n    const tempSubMenus = { ...subMenus\n    }; // tempSubMenus[name] = !tempSubMenus[name];\n\n    Object.keys(tempSubMenus).forEach(key => {\n      if (key === name) {\n        tempSubMenus[key] = true;\n      } else {\n        tempSubMenus[key] = false;\n      }\n    });\n    setSubMenus(tempSubMenus);\n  };\n\n  const setButtonRef = useCallback((node, ref) => {\n    dropdownButtonRef.current = node;\n    return ref(node);\n  }, []);\n  const setListRef = useCallback((node, ref) => {\n    dropdownListRef.current = node;\n    return ref(node);\n  }, []);\n\n  const dropdownToggle = () => {\n    setDropdownToggle(!dropdownOpen);\n  };\n\n  const modifiers = {\n    preventOverflow: {\n      padding: 0\n    },\n    shift: {\n      enabled: true\n    },\n    flip: {\n      enabled: true,\n      flipVariationsByContent: true,\n      behavior: \"flip\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Manager, {\n    children: [console.log(subMenus), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Reference, {\n        children: _ref2 => {\n          let {\n            ref\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: dropdownToggle,\n            ref: node => setButtonRef(node, ref),\n            children: buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(Popper, {\n        placement: \"bottom-end\",\n        modifiers: modifiers,\n        children: _ref3 => {\n          let {\n            ref,\n            style,\n            placement,\n            arrowProps\n          } = _ref3;\n          return /*#__PURE__*/_jsxDEV(\"ul\", {\n            ref: node => setListRef(node, ref),\n            style: style,\n            \"data-placement\": placement,\n            className: `dropdown-button__list ${dropdownOpen && \"dropdown-button__list--open\" || \"\"}`,\n            children: options.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: `dropdown-button__list-item\n                ${item.name && `dropdown-button__list-item--${item.name}` || \"\"}`,\n                onClick: () => showSub(item.name),\n                children: [item.label, item.subMenu && /*#__PURE__*/_jsxDEV(SubMenu, {\n                  open: subMenus[item.name],\n                  options: item.subMenu,\n                  listRef: dropdownListRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 25\n                }, this)]\n              }, item.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropdownButton, \"rSE/IN0jmbFbKpOycg4MFqHWGB8=\");\n\n_c = DropdownButton;\nexport default DropdownButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownButton\");","map":{"version":3,"sources":["C:/Users/kcgal/OneDrive/Documents/GitHub/LOST/client/lost-app/src/components/DropdownButton.js"],"names":["React","useState","useRef","useCallback","useEffect","Manager","Reference","Popper","SubMenu","DropdownButton","buttonText","options","dropdownOpen","setDropdownToggle","subMenus","setSubMenus","dropdownListRef","dropdownButtonRef","forEach","opt","subMenu","tempSubMenus","name","showSub","console","log","Object","keys","key","setButtonRef","node","ref","current","setListRef","dropdownToggle","modifiers","preventOverflow","padding","shift","enabled","flip","flipVariationsByContent","behavior","style","placement","arrowProps","map","item","label"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { Manager, Reference, Popper } from \"react-popper\";\r\n\r\nimport SubMenu from \"./SubMenu\";\r\n\r\nconst DropdownButton = ({ buttonText, options }) => {\r\n  const [dropdownOpen, setDropdownToggle] = useState(false);\r\n  const [subMenus, setSubMenus] = useState({});\r\n  const dropdownListRef = useRef(null);\r\n  const dropdownButtonRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    options.forEach(opt => {\r\n      if (opt.subMenu) {\r\n        const tempSubMenus = subMenus;\r\n        tempSubMenus[opt.name] = false;\r\n        setSubMenus(tempSubMenus);\r\n      }\r\n    });\r\n  }, [options]);\r\n\r\n  const showSub = name => {\r\n    console.log(subMenus);\r\n    const tempSubMenus = { ...subMenus };\r\n    // tempSubMenus[name] = !tempSubMenus[name];\r\n\r\n    Object.keys(tempSubMenus).forEach(key => {\r\n      if (key === name) {\r\n        tempSubMenus[key] = true;\r\n      } else {\r\n        tempSubMenus[key] = false;\r\n      }\r\n    });\r\n    setSubMenus(tempSubMenus);\r\n  };\r\n\r\n  const setButtonRef = useCallback((node, ref) => {\r\n    dropdownButtonRef.current = node;\r\n    return ref(node);\r\n  }, []);\r\n\r\n  const setListRef = useCallback((node, ref) => {\r\n    dropdownListRef.current = node;\r\n    return ref(node);\r\n  }, []);\r\n\r\n  const dropdownToggle = () => {\r\n    setDropdownToggle(!dropdownOpen);\r\n  };\r\n\r\n  const modifiers = {\r\n    preventOverflow: {\r\n      padding: 0\r\n    },\r\n    shift: {\r\n      enabled: true\r\n    },\r\n    flip: {\r\n      enabled: true,\r\n      flipVariationsByContent: true,\r\n      behavior: \"flip\"\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Manager>\r\n      {console.log(subMenus)}\r\n      <div>\r\n        <Reference>\r\n          {({ ref }) => (\r\n            <button\r\n              onClick={dropdownToggle}\r\n              ref={node => setButtonRef(node, ref)}\r\n            >\r\n              {buttonText}\r\n            </button>\r\n          )}\r\n        </Reference>\r\n        {dropdownOpen && (\r\n          <Popper placement=\"bottom-end\" modifiers={modifiers}>\r\n            {({ ref, style, placement, arrowProps }) => (\r\n              <ul\r\n                ref={node => setListRef(node, ref)}\r\n                style={style}\r\n                data-placement={placement}\r\n                className={`dropdown-button__list ${(dropdownOpen &&\r\n                  \"dropdown-button__list--open\") ||\r\n                  \"\"}`}\r\n              >\r\n                {options.map(item => {\r\n                  return (\r\n                    <li\r\n                      className={`dropdown-button__list-item\r\n                ${(item.name && `dropdown-button__list-item--${item.name}`) ||\r\n                  \"\"}`}\r\n                      key={item.name}\r\n                      onClick={() => showSub(item.name)}\r\n                    >\r\n                      {item.label}\r\n                      {item.subMenu && (\r\n                        <SubMenu\r\n                          open={subMenus[item.name]}\r\n                          options={item.subMenu}\r\n                          listRef={dropdownListRef}\r\n                        />\r\n                      )}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            )}\r\n          </Popper>\r\n        )}\r\n      </div>\r\n    </Manager>\r\n  );\r\n};\r\n\r\nexport default DropdownButton;\r\n"]},"metadata":{},"sourceType":"module"}