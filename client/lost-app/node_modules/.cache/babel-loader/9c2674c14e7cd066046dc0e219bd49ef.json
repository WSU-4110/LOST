{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kcgal\\\\OneDrive\\\\Documents\\\\GitHub\\\\LOST\\\\client\\\\lost-app\\\\src\\\\pages\\\\MusicPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Loading from './Loading';\nimport { createPopper } from '@popperjs/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MusicPlayer = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1500);\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: [DropdownButton, SplitButton].map((DropdownType, idx) => /*#__PURE__*/_jsxDEV(DropdownType, {\n        as: ButtonGroup,\n        id: `dropdown-button-drop-${idx}`,\n        size: \"lg\",\n        title: \"Drop large\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"1\",\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"2\",\n          children: \"Another action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"3\",\n          children: \"Something else here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"4\",\n          children: \"Separated link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [DropdownButton, SplitButton].map((DropdownType, idx) => /*#__PURE__*/_jsxDEV(DropdownType, {\n        as: ButtonGroup,\n        id: `dropdown-button-drop-${idx}`,\n        size: \"sm\",\n        variant: \"secondary\",\n        title: \"Drop small\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"1\",\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"2\",\n          children: \"Another action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"3\",\n          children: \"Something else here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: \"4\",\n          children: \"Separated link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MusicPlayer, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n\n_c = MusicPlayer;\nexport default MusicPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"sources":["C:/Users/kcgal/OneDrive/Documents/GitHub/LOST/client/lost-app/src/pages/MusicPlayer.js"],"names":["React","useEffect","useState","Loading","createPopper","MusicPlayer","isLoading","setIsLoading","setTimeout","DropdownButton","SplitButton","map","DropdownType","idx","ButtonGroup"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,CAAT;;AAKA,MAAGD,SAAH,EAAa;AACX,wBACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACC,sBACI;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACL,CAACG,cAAD,EAAiBC,WAAjB,EAA8BC,GAA9B,CAAkC,CAACC,YAAD,EAAeC,GAAf,kBACjC,QAAC,YAAD;AACE,QAAA,EAAE,EAAEC,WADN;AAGE,QAAA,EAAE,EAAG,wBAAuBD,GAAI,EAHlC;AAIE,QAAA,IAAI,EAAC,IAJP;AAKE,QAAA,KAAK,EAAC,YALR;AAAA,gCAOE,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA,SAEOA,GAFP;AAAA;AAAA;AAAA;AAAA,cADD;AADK;AAAA;AAAA;AAAA;AAAA,YADF,eAkBN;AAAA,gBACG,CAACJ,cAAD,EAAiBC,WAAjB,EAA8BC,GAA9B,CAAkC,CAACC,YAAD,EAAeC,GAAf,kBACjC,QAAC,YAAD;AACE,QAAA,EAAE,EAAEC,WADN;AAGE,QAAA,EAAE,EAAG,wBAAuBD,GAAI,EAHlC;AAIE,QAAA,IAAI,EAAC,IAJP;AAKE,QAAA,OAAO,EAAC,WALV;AAME,QAAA,KAAK,EAAC,YANR;AAAA,gCAQE,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE,QAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA,SAEOA,GAFP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAlBM;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH,CApDD;;GAAMR,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport Loading from './Loading';\r\nimport { createPopper } from '@popperjs/core';\r\n\r\n\r\nconst MusicPlayer = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 1500);\r\n  })\r\n  if(isLoading){\r\n    return(\r\n      <Loading />\r\n    );\r\n  }\r\n    return (\r\n        <div align='center'>\r\n          <div className=\"mb-2\">\r\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n      <DropdownType\r\n        as={ButtonGroup}\r\n        key={idx}\r\n        id={`dropdown-button-drop-${idx}`}\r\n        size=\"lg\"\r\n        title=\"Drop large\"\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownType>\r\n    ))}\r\n  </div>\r\n  <div>\r\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\r\n      <DropdownType\r\n        as={ButtonGroup}\r\n        key={idx}\r\n        id={`dropdown-button-drop-${idx}`}\r\n        size=\"sm\"\r\n        variant=\"secondary\"\r\n        title=\"Drop small\"\r\n      >\r\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n      </DropdownType>\r\n    ))}\r\n  </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default MusicPlayer"]},"metadata":{},"sourceType":"module"}