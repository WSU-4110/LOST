{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\LOST\\\\client\\\\lost-app\\\\src\\\\pages\\\\Error.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Error = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1500);\n  });\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"We're sorry but an ERROR has occured.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Error, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n\n_c = Error;\nexport default Error;\n\nvar _c;\n\n$RefreshReg$(_c, \"Error\");","map":{"version":3,"sources":["C:/Users/crist/LOST/client/lost-app/src/pages/Error.js"],"names":["React","useEffect","useState","Loading","Error","isLoading","setIsLoading","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,IAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,CAAT;;AAKA,MAAGD,SAAH,EAAa;AACX,wBACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACC,sBACI;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjBD;;GAAMD,K;;KAAAA,K;AAmBN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport Loading from './Loading';\r\n\r\n\r\nconst Error = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 1500);\r\n  })\r\n  if(isLoading){\r\n    return(\r\n      <Loading />\r\n    );\r\n  }\r\n    return (\r\n        <div align='center'>\r\n          <h1>We're sorry but an ERROR has occured.</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error"]},"metadata":{},"sourceType":"module"}